// GLOBAL VARIABLES
var infoColor = 0x0bb6;
var errorColor = 0x0bb6;
var highlightColor = 0x0bb6;
var debugColor = 0x45F;

	var pontoDeFuga = { x: Player.X(), y: Player.Y() }
	var fugaIncremento = 0;
	var fastLoot = {};
	var gWalk = {};

function Autostart() {

	Orion.Terminate('all', 'Autostart');

	Orion.Wait(500);
	TextWindow.Clear();
	
	Orion.BlockMoving(false);

	Orion.Print(infoColor, 'BG Macro: AutoKillBOW');
	Orion.Exec('AutoKillBOW', true);
	
	Orion.Print(infoColor, 'BG Macro: HideBlood');
	Orion.Exec('HideBlood', true);
	
	Orion.Print(infoColor, 'BG Macro: AutoPotion');
	Orion.Exec('AutoPotion', true);
	
	Orion.Print(infoColor, 'BG Macro: AntiPK');
	Orion.Exec('AntiPK', true);

	Orion.Exec('SetViewRange', true);
}

function reset()
{
	Orion.CharPrint(self,infoColor, 'Reset Scripts' );
	
	if(Orion.ScriptRunning('AutoKillEvento'))
		Orion.Terminate('all', 'reset');
	else
		Orion.Exec('Autostart', true);

}

function AutoKillBOW(){

	Orion.Ignore(self);

	while(!Player.Dead())
	{
		debug('Ponto de fuga: ' + pontoDeFuga.x + ', ' + pontoDeFuga.y, false);
		
		var target = FindNearEnemy(25)
		if (target == null) 
		{
			debug("NOTHING TO KILL", true, true);
			debug('Incremento de fuga: ' + fugaIncremento, false)
			fugaIncremento += 4;
			PathFinder(pontoDeFuga.x - fugaIncremento, pontoDeFuga.y - fugaIncremento);
			Orion.Wait(50);
			continue;
		}

		debug('Target acquired at ' + Orion.GetDistance(target.Serial()) + ' tiles');
		var retreated = false;
		while(target != null)
		{	
			retreated = Retreat();
			if(retreated)
				break;
			
			//PathFinder(target.X(), target.Y(), 12);
			target = approachLookingForClosestEnemies(target, 12);
			Orion.CharPrint(target.Serial(), infoColor, 'Target: ' + Orion.GetDistance(target.Serial()) );
			fastLoot = {x: target.X(), y: target.Y() }

			Orion.UseType('0x13B1');//
			Orion.Attack(target.Serial());
			
			Orion.Wait(500);
			target = Orion.FindObject(target.Serial());//
		}
		if(!retreated)
			FastLoot(fastLoot);
		
		Orion.Wait(50);
	}
}

function Retreat(){

		var enemyTooClose = FindNearEnemy(1)
			if(enemyTooClose)
			{
				debug("Inimigo muito perto. RECUANDO! - Incremento zerado.");
				fugaIncremento = 0;
				PathFinder(pontoDeFuga.x, pontoDeFuga.y, 0);
				return true;
			}
			if(Player.Hits() < 60 )
			{
				debug("Life muito baixo. RECUANDO! - Incremento zerado.");
				fugaIncremento = 0;
				PathFinder(pontoDeFuga.x, pontoDeFuga.y, 0);
				return true;
			}
			
			var contaPerigo = Orion.FindType('!0x0190|!0x0191', '-1', ground, "live|mobile`", 8, "gray|red");
			if(contaPerigo.length > 3 )
			{
				debug("Muito Perigo: " + contaPerigo.length + '  - Incremento zerado.');
				fugaIncremento = 0;
				PathFinder(pontoDeFuga.x, pontoDeFuga.y, 0);
				return true;
			}
			else{
				debug("POUCO Perigo: " + contaPerigo.length, false);
			}
			
			return false;
}

function approachLookingForClosestEnemies(target, tolerance){

	var distance = Orion.GetDistance(target.Serial());
	

		debug('lookin for the closest enemy');
		if(distance > tolerance){
			gWalk = {x: target.X(), y: target.Y(), tolerance: (distance-=3) };
			Orion.Exec('GPathFinder', true);  
		}
		
		var newE = Orion.FindType('!0x0190|!0x0191', '-1', ground, 'live|mobile', 25, "gray|red");
		
		for(var i = 0; i < newE.length; i++)
		{
			var newD = Orion.GetDistance(newE[i]);
			//Orion.CharPrint(newE[i], infoColor, 'distance: ' + newD );
			if(newD < distance)
			{
				//debug('New closest');
				target = Orion.FindObject(newE[i]);
				distance = newD;
				Orion.CharPrint(newE[i], infoColor, 'Target: ' + distance );
				//break;
			}
			
		}
	return target;
}

function FindNearEnemy(range){

	var enemies =  Orion.FindType('!0x0190|!0x0191', '-1', ground, "near|live|mobile", range, "gray|red");
	
	if(enemies.length)
		return Orion.FindObject(enemies[0])
	
	return null;

}

//------------------------------------------------------
//show name of creatures on screen
function AllNames()
{
	var macro = Orion.CreateClientMacro();
	macro.AddAction('AllNames');
	macro.Play(false, 1000);
}

//------------------------------------------------------
function SetViewRange()
{	
	Orion.ClientViewRange(21);
	Orion.Wait(200);
	Orion.Print(infoColor, 'View Range set to: ' + Orion.ClientViewRange() );	
}

//------------------------------------------------------
function HideBlood(){

	var blood;

	while(!Player.Dead())
	{
	
		blood = Orion.FindType('0x122C|0x122B|0x122F|0x122E|0x122D|0x122A|0x1645', '-1', ground, 12);
		
		for(var i=0; i < blood.length; i++)
			Orion.Hide(blood[i]);
			
		Orion.Wait(250);
	}
}


function SkillTrackingPlayer() {

	Orion.CharPrint(self, infoColor, "Track Players");

	Orion.WarMode(false);
	Orion.CancelWaitMenu();
	Orion.UseSkill('Tracking');
	Orion.WaitMenu('Tracking', 3);
}


//================================================
//============= PVP PVM ============================
//================================================
function ___PVP_PVM___(){}
//------------------------------------------------------


function AutoPotion(){

	while(!Player.Dead()){
	Orion.Wait(300);
	
		if(Player.Hits() < 100 ){
			Orion.CharPrint(self, infoColor, "Potion: Life Boost");
			Orion.UseType('0x0F82','0x0026', backpack);
		}
	
	}
}

//follow item targeted forever
function Follow() {

	Orion.OptionAlwaysRun(true);


	var obj = Orion.FindObject('follow');
	if (obj == null) return;
	Orion.Click(obj.Serial());

	while (obj != null) {

		//when MOBS dies 
		if (!obj.X())
			break;

		Orion.WalkTo(obj.X(), obj.Y(), obj.Z());
		Orion.Wait(600);
	}
	
	Orion.OptionAlwaysRun(false);
}


function __LOOTING__(){}

function FastLoot() {

	debug('Going to loot.')
	PathFinder(fastLoot.x, fastLoot.y, 0);
	
	var bodies = Orion.FindType('0x0ECD|0x2006|0x0ECA|0x0ECC', '-1', ground, '', 3);

	if (bodies.length)
	{
		debug('Looting: ' + bodies.length)
		for(var i=0; i < bodies.length; i++ )
		{
			Orion.UseObject(bodies[i]);
			LootLoadingLag(bodies[i]);
			Loot(bodies[i]);
		}
	}
}

function Loot(corpseSerial) {

	var attempCounter = 0;

	while (Orion.GetDistance(corpseSerial) <= 3)
	{
		
		//var lootList = Orion.FindList(listName, corpseSerial);
		var lootList = Orion.FindType('-1', '-1', corpseSerial, 'item', '3', -1, true);

		if (lootList.length == 0) {
			//Orion.Print(infoColor, attempCounter + " --ALL DONE LOOTING: " +  lootList.length );
			Orion.Ignore(corpseSerial);
			return;
		}	
		//Orion.Print(infoColor, ++attempCounter + " -- Items to loot: " +  lootList.length );
		Orion.MoveItem(lootList[0], 0, backpack);
		Orion.Wait(200);
		
		if(attempCounter > 35)
		{
			Orion.Ignore(corpseSerial);
			Orion.Hide(corpseSerial);
			Orion.Exec('Autostart', true);
		}
	}
}

function LootLoadingLag(bodySerial) {
	
	var timer = Orion.Now();

	while (Orion.Now() - timer < 600 ){	
		if( Orion.FindType('-1', '-1', bodySerial, 'item', '3', -1, true).length > 0 )
			break;
				
		Orion.Wait(50);
	}
}


function PrintColors(){

	for(var i =  0x0BB7; i >= 0; i--)	{
		Orion.Print(i,'Printing Colors: ' + i.toString(16));
		Orion.Wait(100);
	}
}




function PathFinder(x, y, tolerance)
{
	debug('PathFinder:' + x + ', ' + y + ' ~ ' + tolerance, false);
	Orion.OptionAlwaysRun(true);
	while(!Orion.WalkTo(x, y, Player.Z(), tolerance))
	{
		if(x == 0 || y == 0)
			break;
				
		Orion.Wait(500);
		Orion.Print(31, 'Going to: ' + x + ', ' + y );
	}
	Orion.OptionAlwaysRun(false);
}

function GPathFinder()
{
	debug('PathFinder:' + gWalk.x + ', ' + gWalk.y + ' ~ ' + gWalk.tolerance, false);
	Orion.OptionAlwaysRun(true);
	while(!Orion.WalkTo(gWalk.x, gWalk.y, Player.Z(), gWalk.tolerance))
	{
		if(gWalk.x == 0 || gWalk.y == 0)
			break;
				
		Orion.Wait(500);
		Orion.Print(31, 'Going to: ' + gWalk.x + ', ' + gWalk.y );
	}
	Orion.OptionAlwaysRun(false);
}



function AntiPK() {

	var delay = 50;
	var range = 25;
	var isInIgnoreArea;
	
	var pkList = Orion.GetEnemyList();
	
	while (Orion.Connected()) 
	{
	
		var pksFound = Orion.FindType('0x0190|0x0191', '-1', ground, 'human', range, 'murderer|blue');

		if (pksFound.length == 0 ) 
		{
			Orion.Wait(delay);
			continue;
		}
		
		for (var i = 0; i < pksFound.length; i++) {
			for (j = 0; j < pkList.length; j++) {
				if (pksFound[i] == pkList[j]) {
					Orion.UseType('0x0F0E', '0x0001', backpack, true); //invis
					Orion.Terminate('all', 'AntiPK');
					Orion.BlockMoving(true);
					Orion.Say('.recall 1,1');
					Orion.Sound(107);
					Orion.WarMode(false);
					Orion.CharPrint(self, 0xff, "PK[" + Orion.GetDistance((pksFound[i])) + " tiles away] " + Orion.RequestName(pkList[j])+ ' : ' + pkList[j]);
					Orion.Wait(1000);
					Orion.BlockMoving(false);
					Orion.Terminate('all');
				}
			}
		}
	}
}


function debug(inputtext, active, statusActive) {

	if(active == null)
		active = true;
	
	if(active)
	{
		if(!TextWindow.Open()) 
      		TextWindow.Open();
      		
		TextWindow.Print(Orion.Time('hh:mm:ss') + ' >  ' + inputtext );

		if(statusActive)
			Orion.Print(debugColor, inputtext)
    }
}
