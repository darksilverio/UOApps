               ; ==--== INICIO ==--==
initevents
; =====================================================================
; Macro de Fishing
; Distribuição: Gratúita
; ========================CONFIGURAÇÕES INICIAIS - Variáveis=====================

Set %Pole XHF
Set %Tentativa 4
Set %Comando 1
Set %ComandoX 1
Set %msg Forward

Set %cnt 0

Set #ltargetid 0
Set #ltargetz 0
Set #ltargetkind 2

; ========================CONFIGURAÇÕES INICIAIS - Variáveis=====================

loop:
Set %cnt %cnt + 1
gosub %cnt

if %cnt > 7
{
Set %cnt 0
goto Move
}

Set %Chance 0
goto Fish

; ====================FISH====================
sub CutFish
    while %FindFish <> 0
    {
     FindItem %FishTypes C_ , #BACKPACKID
     set %FindFish #FINDCNT
     if #FINDCNT = 0
     {
      return
     }
     set #LTARGETID #FINDID
     FindItem %CutKnife C_ , #BACKPACKID
     set #LOBJECTID #FINDID
     set #LTARGETKIND 1
     Event Macro 17 0 ; last object
     Target 2s
     Event Macro 22 0 ; last target
     Wait 1s
    }




Fish:


Set %Chance %Chance + 1
if %Chance > %Tentativa
{
goto loop
}

gosub pole

Set #SCNT 0

jornal:
if #SCNT > 7
{
goto Fish
}

deletejournal
scanjournal

if you_can't in #journal
{
goto loop
}

if fail in #journal
{
goto Fish
}

if see in #journal
{
goto loop
}

if voce_retira_fish in #journal
{
goto loop
}

if try_fishing in #journal
{
goto loop
}

if nao_ha_mais in #journal
{
goto loop
}

if nada_para in #journal
{
goto loop
}

if voce_pescou in #journal
{
goto Fish
}
if no_fish in #journal
{
goto loop
}
if too in #journal
{
goto loop
}

goto jornal

sub CheckWeight
    if #weight < #maxweight - 20
    {
    gosub CutFish
    }
    return

; ====================MOVE====================
Move:

if %Comando = 1
{
msg Raise Anchor$
msg Forward$
}
if %Comando = 2
{
msg Raise Anchor$
msg Left$
}
if %Comando = 3
{
msg Raise Anchor$
msg Back$
}
if %Comando = 4
{
msg Raise Anchor$
msg Right$
}

Set %ComandoX %ComandoX + 1

IF %ComandoX > 6
{
Set %ComandoX 1
Set %Comando %Comando + 1

IF %Comando > 4
{
Set %Comando 1
}
}

wait 6s
msg Drop Anchor$
goto loop


sub 1
set #ltargetx #charposx
set #ltargety #charposy + 3
return

sub 2
set #ltargetx #charposx + 1
set #ltargety #charposy + 3
return

sub 3
set #ltargetx #charposx + 2
set #ltargety #charposy + 3
return

sub 4
set #ltargetx #charposx + 3
set #ltargety #charposy + 3
return

sub 5
set #ltargetx #charposx - 1
set #ltargety #charposy + 3
return

sub 6
set #ltargetx #charposx - 2
set #ltargety #charposy + 3
return

sub 7
set #ltargetx #charposx - 3
set #ltargety #charposy + 3
return

;----------

sub 8
set #ltargetx #charposx
set #ltargety #charposy - 3
return

sub 9
set #ltargetx #charposx + 1
set #ltargety #charposy - 3
return

sub 10
set #ltargetx #charposx + 2
set #ltargety #charposy - 3
return

sub 11
set #ltargetx #charposx + 3
set #ltargety #charposy - 3
return

sub 12
set #ltargetx #charposx - 1
set #ltargety #charposy - 3
return

sub 13
set #ltargetx #charposx - 2
set #ltargety #charposy - 3
return

sub 14
set #ltargetx #charposx - 3
set #ltargety #charposy - 3
return

;---------

sub 15
set #ltargetx #charposx
set #ltargety #charposy - 4
return

sub 16
set #ltargetx #charposx + 1
set #ltargety #charposy - 4
return

sub 17
set #ltargetx #charposx + 2
set #ltargety #charposy - 4
return

sub 18
set #ltargetx #charposx + 3
set #ltargety #charposy - 4
return

sub 19
set #ltargetx #charposx - 1
set #ltargety #charposy - 4
return

sub 20
set #ltargetx #charposx - 2
set #ltargety #charposy - 4
return

sub 21
set #ltargetx #charposx - 3
set #ltargety #charposy - 4
return

;---------

sub 22
set #ltargetx #charposx
set #ltargety #charposy + 4
return

sub 23
set #ltargetx #charposx + 1
set #ltargety #charposy + 4
return

sub 24
set #ltargetx #charposx + 2
set #ltargety #charposy + 4
return

sub 25
set #ltargetx #charposx + 3
set #ltargety #charposy + 4
return

sub 26
set #ltargetx #charposx - 1
set #ltargety #charposy + 4
return

sub 27
set #ltargetx #charposx - 2
set #ltargety #charposy + 4
return

sub 28
set #ltargetx #charposx - 3
set #ltargety #charposy + 4
return


sub pole
finditem %Pole
if #findkind = 0
{
set #LObjectID #FindID
event macro 17 0
target
event macro 25 0
event macro 22 0
return
}

if #findkind = 1
{
ignoreitem #FindID
gosub pole
return
}

if #findkind = -1
{
ignoreitem reset
event sysmessage Pole nao encontrado
wait 3s
return
}
return

; ==--== FIM ==--==
